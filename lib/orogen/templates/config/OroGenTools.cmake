include(FindPkgConfig) # This is the Cmake 2.6 FindPkgConfig macro
macro(orogen_pkg_check_modules VARNAME)
    if (NOT ${VARNAME}_FOUND)
        pkg_check_modules(${VARNAME} ${ARGN})
        foreach(${VARNAME}_lib ${${VARNAME}_LIBRARIES})
          set(_${VARNAME}_lib NOTFOUND)
          find_library(_${VARNAME}_lib NAMES ${${VARNAME}_lib} HINTS ${${VARNAME}_LIBRARY_DIRS})
          if (NOT _${VARNAME}_lib)
            set(_${VARNAME}_lib ${${VARNAME}_lib})
          endif()
          list(APPEND _${VARNAME}_LIBRARIES ${_${VARNAME}_lib})
        endforeach()
        list(APPEND _${VARNAME}_LIBRARIES ${${VARNAME}_LDFLAGS_OTHER})
        set(${VARNAME}_LIBRARIES ${_${VARNAME}_LIBRARIES} CACHE INTERNAL "")
    endif()
endmacro()

function(orogen_create_symlink LINK TARGET)
    get_filename_component(LINK "${LINK}" ABSOLUTE)
    get_filename_component(TARGET "${TARGET}" ABSOLUTE)
    get_filename_component(__link_dir "${LINK}" DIRECTORY)
    execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory "${__link_dir}")
    if (WIN32)
        if (IS_DIRECTORY "${TARGET}")
            set(__mklink_args /D)
        endif()
        file(TO_NATIVE_PATH "${LINK}" __native_link)
        file(TO_NATIVE_PATH "${TARGET}" __native_target)
        execute_process(COMMAND cmd.exe /C mklink ${__mklink_args} "${__native_link}" "${__native_target}")
    else()
        execute_process(COMMAND cmake -E create_symlink "${TARGET}" "${LINK}")
    endif()
endfunction()

